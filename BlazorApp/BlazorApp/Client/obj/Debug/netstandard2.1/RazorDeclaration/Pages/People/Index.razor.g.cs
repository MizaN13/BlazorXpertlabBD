#pragma checksum "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\Pages\People\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6edd4f479d6981c1ff81710f8641842a2cb3bf15"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorApp.Client.Pages.People
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using BlazorApp.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using BlazorApp.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using BlazorApp.Shared.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using BlazorApp.Client.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Authentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\Pages\People\Index.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\Pages\People\Index.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/people")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 69 "I:\XpertLab\BlazorXpertlabBD\BlazorApp\BlazorApp\Client\Pages\People\Index.razor"
       
    List<Person> people { get; set; }
    private int totalPageQuantity;
    private int currentPage = 1;
    private string nameFilter = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadPeople();
    }

    private async Task SelectedPage(int page)
    {
        currentPage = page;
        await LoadPeople(page);
    }

    private async Task Filter()
    {
        currentPage = 1;
        await LoadPeople();
    }

    private async Task Clear()
    {
        nameFilter = string.Empty;
        currentPage = 1;
        await LoadPeople();
    }

    async Task LoadPeople(int page = 1, int quantityPerPage = 10)
    {
        //await Task.Delay(4000);
        var httpResponse = await http.GetAsync($"api/people?page={page}&quantityPerPage={quantityPerPage}&name={nameFilter}");
        if (httpResponse.IsSuccessStatusCode)
        {
            totalPageQuantity = int.Parse(httpResponse.Headers.GetValues("pagesQuantity").FirstOrDefault());
            var responseString = await httpResponse.Content.ReadAsStringAsync();
            people = JsonSerializer.Deserialize<List<Person>>(responseString,
                new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
        }
        else
        {
            // handle error
        }
    }
    async Task DeletePerson(int personId)
    {
        var tokenResult = await AuthenticationService.RequestAccessToken();

        if (tokenResult.TryGetToken(out var token))
        {
            var httpClient = new HttpClient();
            httpClient.BaseAddress = new Uri(navigationManager.BaseUri);

            httpClient.DefaultRequestHeaders.Add("Authorization", $"Bearer {token.Value}");
            var personSelected = people.First(x => x.Id == personId);
            if (await js.Confirm("Confirm", $"Do you want to delete {personSelected.Name}?", SweetAlertMessageType.question))
            {
                await httpClient.DeleteAsync($"api/people/{personId}");
                await LoadPeople();
            }
        }
        else
        {
            navigationManager.NavigateTo(tokenResult.RedirectUrl);
        }

        //await js.DisplayMessage("my title", "My message", SweetAlertMessageType.success);
        //var personSelected = people.First(x => x.Id == personId);
        //if (await js.Confirm("Confirm", $"Do you want to delete {personSelected.Name}?", SweetAlertMessageType.question))
        //{
        //    await http.DeleteAsync($"api/people/{personId}");
        //    await LoadPeople();
        //}
    }
    private void ExportAsCSV()
    {
        using (var memoryStream = new MemoryStream())
        {
            using (var writer = new StreamWriter(memoryStream))
            {
                using (var csv = new CsvHelper.CsvWriter(writer))
                {
                    csv.WriteRecords(people);
                }

                var arr = memoryStream.ToArray();
                js.SaveAs("people.csv", arr);
            }
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAccessTokenProvider AuthenticationService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
